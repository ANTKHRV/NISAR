{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Pr\\\\nys\\\\src\\\\SimpleModal\\\\SimpleModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Transition } from \"react-transition-group\";\nimport { ReactComponent as IconClose } from \"../SimpleModal/icon-close.svg\";\nimport \"./SimpleModal.css\";\n// import { Helmet } from 'react-helmet';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SimpleModal = ({\n  isOpen,\n  onClose,\n  children\n}) => {\n  _s();\n  const nodeRef = React.useRef();\n  const onWrapperClick = event => {\n    event.stopPropagation();\n    if (event.target.classList.contains(\"modal-wrapper\")) onClose();\n  };\n  useEffect(() => {\n    const body = document.querySelector('body');\n    body.style.overflow = isOpen ? 'hidden' : 'auto';\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Transition, {\n      nodeRef: nodeRef,\n      in: isOpen,\n      timeout: 0,\n      unmountOnExit: true,\n      children: state => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `modal modal--${state}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalwrapper\",\n          onClick: onWrapperClick,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalcontents\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalclosebuttons\",\n              onClick: () => onClose(),\n              children: /*#__PURE__*/_jsxDEV(IconClose, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), children]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SimpleModal, \"6lOStpyXmuUepN3BYUamOEINVKQ=\");\n_c = SimpleModal;\nvar _c;\n$RefreshReg$(_c, \"SimpleModal\");","map":{"version":3,"names":["React","useEffect","Transition","ReactComponent","IconClose","jsxDEV","_jsxDEV","Fragment","_Fragment","SimpleModal","isOpen","onClose","children","_s","nodeRef","useRef","onWrapperClick","event","stopPropagation","target","classList","contains","body","document","querySelector","style","overflow","in","timeout","unmountOnExit","state","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/projects/Pr/nys/src/SimpleModal/SimpleModal.jsx"],"sourcesContent":["import React, { useEffect} from \"react\";\r\nimport { Transition } from \"react-transition-group\";\r\nimport { ReactComponent as IconClose } from \"../SimpleModal/icon-close.svg\";\r\nimport \"./SimpleModal.css\";\r\n// import { Helmet } from 'react-helmet';\r\n\r\n\r\nexport const SimpleModal = ({ isOpen, onClose, children }) => {\r\n\r\n const nodeRef = React.useRef()\r\n \r\n  const onWrapperClick = (event) => {\r\n    event.stopPropagation();\r\n    if (event.target.classList.contains(\"modal-wrapper\")) onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const body = document.querySelector('body');\r\n    body.style.overflow = isOpen ? 'hidden' : 'auto';\r\n  }, [isOpen])\r\n  \r\n  return (\r\n    <>\r\n  \r\n\r\n      \r\n      <Transition nodeRef={nodeRef} in={isOpen} timeout={0} unmountOnExit={true}>\r\n      {(state) => (\r\n          <div className={`modal modal--${state}`}>\r\n            <div className=\"modalwrapper\" onClick={onWrapperClick}>\r\n              <div className=\"modalcontents\">\r\n                <button\r\n                  className=\"modalclosebuttons\"\r\n                  onClick={() => onClose()}\r\n                > \r\n                  <IconClose />\r\n                </button>\r\n                {children}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Transition>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAO,OAAO;AACvC,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,cAAc,IAAIC,SAAS,QAAQ,+BAA+B;AAC3E,OAAO,mBAAmB;AAC1B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGA,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAE7D,MAAMC,OAAO,GAAGd,KAAK,CAACe,MAAM,CAAC,CAAC;EAE7B,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChCA,KAAK,CAACC,eAAe,CAAC,CAAC;IACvB,IAAID,KAAK,CAACE,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAEV,OAAO,CAAC,CAAC;EACjE,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd,MAAMqB,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;IAC3CF,IAAI,CAACG,KAAK,CAACC,QAAQ,GAAGhB,MAAM,GAAG,QAAQ,GAAG,MAAM;EAClD,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBACEJ,OAAA,CAAAE,SAAA;IAAAI,QAAA,eAIEN,OAAA,CAACJ,UAAU;MAACY,OAAO,EAAEA,OAAQ;MAACa,EAAE,EAAEjB,MAAO;MAACkB,OAAO,EAAE,CAAE;MAACC,aAAa,EAAE,IAAK;MAAAjB,QAAA,EACxEkB,KAAK,iBACHxB,OAAA;QAAKyB,SAAS,EAAE,gBAAgBD,KAAK,EAAG;QAAAlB,QAAA,eACtCN,OAAA;UAAKyB,SAAS,EAAC,cAAc;UAACC,OAAO,EAAEhB,cAAe;UAAAJ,QAAA,eACpDN,OAAA;YAAKyB,SAAS,EAAC,eAAe;YAAAnB,QAAA,gBAC5BN,OAAA;cACEyB,SAAS,EAAC,mBAAmB;cAC7BC,OAAO,EAAEA,CAAA,KAAMrB,OAAO,CAAC,CAAE;cAAAC,QAAA,eAEzBN,OAAA,CAACF,SAAS;gBAAA6B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,EACRxB,QAAQ;UAAA;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;EAAC,gBACb,CAAC;AAEP,CAAC;AAACvB,EAAA,CAtCWJ,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}